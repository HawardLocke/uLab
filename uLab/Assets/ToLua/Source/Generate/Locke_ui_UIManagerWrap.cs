//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Locke_ui_UIManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Locke.ui.UIManager), typeof(Locke.Singleton<Locke.ui.UIManager>));
		L.RegFunction("Init", Init);
		L.RegFunction("Cleanup", Cleanup);
		L.RegFunction("OpenWindow", OpenWindow);
		L.RegFunction("CloseWindow", CloseWindow);
		L.RegFunction("BackToMainWindow", BackToMainWindow);
		L.RegFunction("New", _CreateLocke_ui_UIManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mainWindowInfo", null, set_mainWindowInfo);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLocke_ui_UIManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Locke.ui.UIManager obj = new Locke.ui.UIManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Locke.ui.UIManager.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Locke.ui.UIManager obj = (Locke.ui.UIManager)ToLua.CheckObject(L, 1, typeof(Locke.ui.UIManager));
			obj.Init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Cleanup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Locke.ui.UIManager obj = (Locke.ui.UIManager)ToLua.CheckObject(L, 1, typeof(Locke.ui.UIManager));
			obj.Cleanup();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenWindow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Locke.ui.UIManager obj = (Locke.ui.UIManager)ToLua.CheckObject(L, 1, typeof(Locke.ui.UIManager));
			Locke.ui.WindowInfo arg0 = (Locke.ui.WindowInfo)ToLua.CheckObject(L, 2, typeof(Locke.ui.WindowInfo));
			Locke.ui.IContext arg1 = (Locke.ui.IContext)ToLua.CheckObject(L, 3, typeof(Locke.ui.IContext));
			Locke.ui.IWindow o = obj.OpenWindow(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseWindow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Locke.ui.UIManager obj = (Locke.ui.UIManager)ToLua.CheckObject(L, 1, typeof(Locke.ui.UIManager));
			Locke.ui.IWindow arg0 = (Locke.ui.IWindow)ToLua.CheckUnityObject(L, 2, typeof(Locke.ui.IWindow));
			obj.CloseWindow(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BackToMainWindow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Locke.ui.UIManager obj = (Locke.ui.UIManager)ToLua.CheckObject(L, 1, typeof(Locke.ui.UIManager));
			obj.BackToMainWindow();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mainWindowInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Locke.ui.UIManager obj = (Locke.ui.UIManager)o;
			Locke.ui.WindowInfo arg0 = (Locke.ui.WindowInfo)ToLua.CheckObject(L, 2, typeof(Locke.ui.WindowInfo));
			obj.mainWindowInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mainWindowInfo on a nil value" : e.Message);
		}
	}
}

