//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Lite_EntityManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Lite.EntityManager), typeof(Lite.Manager));
		L.RegFunction("AddPlayer", AddPlayer);
		L.RegFunction("New", _CreateLite_EntityManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLite_EntityManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Lite.EntityManager obj = new Lite.EntityManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Lite.EntityManager.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddPlayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Lite.EntityManager obj = (Lite.EntityManager)ToLua.CheckObject(L, 1, typeof(Lite.EntityManager));
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			TestPlayer o = obj.AddPlayer(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

