//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Lite_NetworkManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Lite.NetworkManager), typeof(Lite.Manager));
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("Start", Start);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("PushPacket", PushPacket);
		L.RegFunction("Update", Update);
		L.RegFunction("SendConnect", SendConnect);
		L.RegFunction("SendBytes", SendBytes);
		L.RegFunction("SendString", SendString);
		L.RegFunction("TestString", TestString);
		L.RegFunction("New", _CreateLite_NetworkManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLite_NetworkManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Lite.NetworkManager obj = new Lite.NetworkManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Lite.NetworkManager.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.NetworkManager obj = (Lite.NetworkManager)ToLua.CheckObject(L, 1, typeof(Lite.NetworkManager));
			obj.Initialize();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.NetworkManager obj = (Lite.NetworkManager)ToLua.CheckObject(L, 1, typeof(Lite.NetworkManager));
			obj.Start();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.NetworkManager obj = (Lite.NetworkManager)ToLua.CheckObject(L, 1, typeof(Lite.NetworkManager));
			obj.Destroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PushPacket(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 1);
			Lite.Packet arg1 = (Lite.Packet)ToLua.CheckObject(L, 2, typeof(Lite.Packet));
			Lite.NetworkManager.PushPacket(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.NetworkManager obj = (Lite.NetworkManager)ToLua.CheckObject(L, 1, typeof(Lite.NetworkManager));
			obj.Update();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendConnect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.NetworkManager obj = (Lite.NetworkManager)ToLua.CheckObject(L, 1, typeof(Lite.NetworkManager));
			obj.SendConnect();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Lite.NetworkManager obj = (Lite.NetworkManager)ToLua.CheckObject(L, 1, typeof(Lite.NetworkManager));
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
			obj.SendBytes(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Lite.NetworkManager obj = (Lite.NetworkManager)ToLua.CheckObject(L, 1, typeof(Lite.NetworkManager));
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SendString(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TestString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Lite.NetworkManager obj = (Lite.NetworkManager)ToLua.CheckObject(L, 1, typeof(Lite.NetworkManager));
			string arg0 = ToLua.CheckString(L, 2);
			obj.TestString(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

