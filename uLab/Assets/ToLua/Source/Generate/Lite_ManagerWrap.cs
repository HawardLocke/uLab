//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Lite_ManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Lite.Manager), typeof(System.Object));
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("Start", Start);
		L.RegFunction("Update", Update);
		L.RegFunction("OnMessage", OnMessage);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.Manager obj = (Lite.Manager)ToLua.CheckObject(L, 1, typeof(Lite.Manager));
			obj.Initialize();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.Manager obj = (Lite.Manager)ToLua.CheckObject(L, 1, typeof(Lite.Manager));
			obj.Destroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.Manager obj = (Lite.Manager)ToLua.CheckObject(L, 1, typeof(Lite.Manager));
			obj.Start();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Lite.Manager obj = (Lite.Manager)ToLua.CheckObject(L, 1, typeof(Lite.Manager));
			obj.Update();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Lite.Manager obj = (Lite.Manager)ToLua.CheckObject(L, 1, typeof(Lite.Manager));
			Lite.Message arg0 = (Lite.Message)ToLua.CheckObject(L, 2, typeof(Lite.Message));
			obj.OnMessage(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

